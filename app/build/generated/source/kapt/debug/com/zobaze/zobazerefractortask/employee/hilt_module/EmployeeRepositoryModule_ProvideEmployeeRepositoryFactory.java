// Generated by Dagger (https://dagger.dev).
package com.zobaze.zobazerefractortask.employee.hilt_module;

import com.zobaze.zobazerefractortask.employee.repository.EmployeeRepository;
import com.zobaze.zobazerefractortask.retrofit.EmployeeService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("dagger.hilt.android.scopes.ViewModelScoped")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class EmployeeRepositoryModule_ProvideEmployeeRepositoryFactory implements Factory<EmployeeRepository> {
  private final Provider<EmployeeService> employeeServiceProvider;

  public EmployeeRepositoryModule_ProvideEmployeeRepositoryFactory(
      Provider<EmployeeService> employeeServiceProvider) {
    this.employeeServiceProvider = employeeServiceProvider;
  }

  @Override
  public EmployeeRepository get() {
    return provideEmployeeRepository(employeeServiceProvider.get());
  }

  public static EmployeeRepositoryModule_ProvideEmployeeRepositoryFactory create(
      Provider<EmployeeService> employeeServiceProvider) {
    return new EmployeeRepositoryModule_ProvideEmployeeRepositoryFactory(employeeServiceProvider);
  }

  public static EmployeeRepository provideEmployeeRepository(EmployeeService employeeService) {
    return Preconditions.checkNotNullFromProvides(EmployeeRepositoryModule.INSTANCE.provideEmployeeRepository(employeeService));
  }
}
